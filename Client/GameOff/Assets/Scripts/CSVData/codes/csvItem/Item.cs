
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.csvItem
{

public sealed class Item :  Bright.Config.BeanBase 
{
    public Item(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["item_name"].IsString) { throw new SerializationException(); }  ItemName = _json["item_name"]; }
        { if(!_json["item_type"].IsNumber) { throw new SerializationException(); }  ItemType = _json["item_type"]; }
        { if(!_json["item_name_cn"].IsString) { throw new SerializationException(); }  ItemNameCn = _json["item_name_cn"]; }
        { if(!_json["item_effect"].IsNumber) { throw new SerializationException(); }  ItemEffect = _json["item_effect"]; }
        { if(!_json["item_content"].IsString) { throw new SerializationException(); }  ItemContent = _json["item_content"]; }
        { if(!_json["item_weight"].IsNumber) { throw new SerializationException(); }  ItemWeight = _json["item_weight"]; }
    }

    public Item(int id, string item_name, int item_type, string item_name_cn, int item_effect, string item_content, int item_weight ) 
    {
        this.Id = id;
        this.ItemName = item_name;
        this.ItemType = item_type;
        this.ItemNameCn = item_name_cn;
        this.ItemEffect = item_effect;
        this.ItemContent = item_content;
        this.ItemWeight = item_weight;
    }

    public static Item DeserializeItem(JSONNode _json)
    {
        return new csvItem.Item(_json);
    }

    /// <summary>
    /// ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 道具名称（英文）
    /// </summary>
    public string ItemName { get; private set; }
    /// <summary>
    /// 1= 道具<br/>2= 鱼类
    /// </summary>
    public int ItemType { get; private set; }
    /// <summary>
    /// 名称注释（中文）
    /// </summary>
    public string ItemNameCn { get; private set; }
    /// <summary>
    /// 效果类型<br/>1= A时间内霸体<br/>2= A时间内钓鱼直接进入B阶段
    /// </summary>
    public int ItemEffect { get; private set; }
    /// <summary>
    /// 类型配置<br/>1= A（秒）<br/>2= A（秒）|B（1= 一阶段；2=二阶段；3=三阶段）
    /// </summary>
    public string ItemContent { get; private set; }
    /// <summary>
    /// 道具权重
    /// </summary>
    public int ItemWeight { get; private set; }

    public const int __ID__ = 1800807880;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "ItemName:" + ItemName + ","
        + "ItemType:" + ItemType + ","
        + "ItemNameCn:" + ItemNameCn + ","
        + "ItemEffect:" + ItemEffect + ","
        + "ItemContent:" + ItemContent + ","
        + "ItemWeight:" + ItemWeight + ","
        + "}";
    }
    }
}
